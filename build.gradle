buildscript {

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id "java"
    id "idea"
    id "maven-publish"
    id "java-library"
//    id "pmd"
//    id "checkstyle"
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext.baseVersion = (project.hasProperty("version") ? project.version : "1")
ext {
    junitVersion = "5.2.0"
    lombokVersion = "1.18.0"
}

group ="io.twdps.starter.errors"
version = "${baseVersion}"

jar {
    baseName = project.name;
    version = "${baseVersion}"
}

dependencies {
    compile "org.projectlombok:lombok:${lombokVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

processResources {
    expand(project.properties)
}

publishing.publications {
    mavenJava(MavenPublication) {
        groupId = project.group
        artifactId = project.name
        artifact jar.archivePath
    }
}


publishing.repositories {
    mavenLocal()
    maven {
        url "s3://maven.k8starter.twdps.io/${project.version.endsWith('-SNAPSHOT') ? 'snapshot' : 'release'}"
        authentication {
            awsIm(AwsImAuthentication) // load from EC2 role or env var
        }
    }
}
//checkstyle {
//    toolVersion = "8.10.1"
//    ignoreFailures = false
//    maxWarnings = 0
//    maxErrors = 0
//    sourceSets = [sourceSets.main, sourceSets.test]
//    reportsDir = file("$project.buildDir/reports/checkstyle")
//}
//
//pmd {
//    toolVersion = "6.4.0"
//    ignoreFailures = false
//    sourceSets = [sourceSets.main]
//    reportsDir = file("$project.buildDir/reports/pmd")
//    ruleSets = ["java-basic", "java-braces"]
//}
